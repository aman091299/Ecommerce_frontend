'use client'

import Link from "next/link"
import GeoLocation from "./GeoLocation"
import { useSelector, useDispatch  } from "react-redux"
import { setIsShowCartModal } from "../store/cartSlice"
import CartModal from "./CartModal"
import { setLoginPage } from "../store/loginSlice"
import LoginModal from "./LoginModal"
import axios from "axios"
import { BASE_URL } from "../utils/constants"
import { useEffect,useState } from "react"
import { getALLCartItems,getUserData } from "../utils/userCartFunc"
import { removeUser } from "../store/userSlice"
import { useRouter } from "next/navigation"
import GoogleMapComponent from "./GoogleMapComponent"


const Navbar = () => {
  console.log("inside navbar")
  const [searchText,setSearchText]=useState('');
  const cart=useSelector(store=>store.cart.cartItems);
  const user=useSelector(store=>store.user);
 const itemQuantity= cart?.reduce((acc,item)=>( acc +item.itemQuantity),0) || 0;
  const router=useRouter();
  const dispatch=useDispatch();


  useEffect(()=>{
    console.log("inside nav bar search text1",searchText);
    if(searchText.trim() !== ''){
          console.log("inside nav bar search text2",searchText);

      const timer=setTimeout(()=>{
            console.log("inside nav bar search text3",searchText);

         router.push("/search?searchText="+searchText)
      },300) 
      return ()=>{
        clearTimeout(timer);
      }
      }
  },[searchText])
  
  useEffect(()=>{
    console.log("inside nav bar useffect")
  getALLCartItems(dispatch);
 },[itemQuantity])

  useEffect(()=>{
   getUserData(dispatch);
 },[])

  const handleRemoveFocus=()=>{
     document.activeElement.blur()
  }
  const handleCartModal=()=>{
     dispatch(setIsShowCartModal(true))
  }
  
  const logoutHandler = async () => {
   
    handleRemoveFocus();
    try {
      const res = await axios.post(
        BASE_URL + "/logout",{},{
          withCredentials:true,
        }
      );
       getALLCartItems(dispatch);
        getUserData(dispatch);
      dispatch(removeUser());
       router.push("/");
      
    } catch (error) {
      return console.log("Error" + error.message);
    }
  };

  const handleLoginModal=()=>{
    handleRemoveFocus();
    dispatch(setLoginPage(true));
  }

  return (
    <div className="relative">
    <div className="navbar shadow-sm grid grid-cols-20 bg-base-content h-20 px-20 fixed z-800">
  <div className="flex-1 col-span-1 ">
  <Link href="/">
    <div className=" text-xl">

          <svg xmlns="http://www.w3.org/2000/svg" 
        width="70" 
        height="50"
        viewBox="0 0 341 240" 
        version="1.1">
        <path 
        d="M 
        189.500 24.141 C 181.943 25.527, 181.130 25.927, 183.344 27.169 C 187.619 29.569, 188 33.049, 188.003 69.718 L 188.006 104.500 201.753 104.500 C 214.575 104.500, 215.803 104.331, 220 101.987 C 231.677 95.465, 236.472 75.899, 229.986 61.236 C 227.266 55.087, 224.656 52.416, 219.407 50.411 C 215.761 49.019, 214.358 48.954, 210.070 49.983 C 207.294 50.649, 203.893 52.083, 202.512 53.170 L 200 55.145 200 39.073 L 200 23 197.250 23.112 C 195.738 23.173, 192.250 23.636, 189.500 24.141 M 29.500 29.386 C 21.395 31.556, 19.218 32.716, 13.873 37.716 C 7.857 43.342, 4.636 49.277, 2.952 57.837 C 0.288 71.381, 3.750 85.283, 12.050 94.365 C 18.971 101.937, 25.023 104.483, 36 104.441 C 45.498 104.404, 50.225 102.622, 55.917 96.930 C 59.256 93.591, 62.357 87.387, 61.434 85.894 C 60.534 84.436, 57.349 84.874, 55.872 86.658 C 53.373 89.678, 46.764 91.956, 40.500 91.956 C 24.958 91.956, 16.196 80.537, 17.191 61.579 C 17.922 47.652, 24.389 39.240, 35.765 37.421 C 41.757 36.463, 48.271 39.084, 51.042 43.567 C 53.276 47.182, 56.370 48.084, 57.393 45.418 C 57.727 44.548, 58 40.771, 58 37.025 C 58 32.138, 57.608 30.064, 56.612 29.681 C 53.046 28.313, 34.273 28.109, 29.500 29.386 M 325.750 37.662 C 326.438 37.940, 327 39.479, 327 41.083 C 327 42.688, 327.450 44, 328 44 C 328.550 44, 329 42.650, 329 41 C 329 39.350, 329.450 38, 330 38 C 330.550 38, 331 39.350, 331 41 C 331 42.650, 331.450 44, 332 44 C 332.550 44, 333.007 43.438, 333.015 42.750 C 333.025 41.932, 333.285 41.862, 333.765 42.548 C 334.169 43.124, 335.512 43.659, 336.750 43.736 C 338.674 43.855, 339 43.378, 339 40.438 C 339 36.509, 336.049 35.367, 335.932 39.250 L 335.865 41.500 334.780 39.250 C 333.877 37.380, 332.919 37.013, 329.097 37.079 C 326.569 37.122, 325.063 37.385, 325.750 37.662 M 78.903 50.013 C 70.264 51.474, 65 55.660, 65 61.068 C 65 67.640, 72.858 68.938, 76.700 63 C 80.143 57.679, 80.893 57, 83.317 57 C 87.559 57, 90 59.703, 90 64.402 C 90 69.610, 89.090 70.504, 78.575 75.634 C 74.216 77.760, 69.153 80.903, 67.325 82.618 C 64.401 85.360, 64 86.351, 64 90.833 C 64 95.089, 64.503 96.504, 67.050 99.404 C 72.373 105.467, 81.484 106.640, 87.881 102.085 C 90.844 99.975, 90.857 99.974, 91.495 101.984 C 92.054 103.747, 92.994 104, 98.986 104 C 108.840 104, 109.885 103.384, 105.808 99.982 L 102.500 97.223 102.194 76.697 C 101.897 56.819, 101.814 56.091, 99.566 53.666 C 95.694 49.487, 89.002 48.304, 78.903 50.013 M 135.120 50.153 C 133.260 50.687, 130.673 51.823, 129.370 52.677 C 127.132 54.144, 127 54.111, 127 52.096 C 127 50.411, 126.526 50.060, 124.750 50.428 C 123.513 50.685, 119.912 51.176, 116.750 51.519 C 113.588 51.863, 111 52.462, 111 52.850 C 111 53.238, 111.900 54.326, 113 55.268 C 114.882 56.879, 115 58.218, 115 77.967 L 115 98.954 112.500 100.592 C 111.125 101.493, 110 102.628, 110 103.115 C 110 103.602, 115.175 104, 121.500 104 C 127.825 104, 133 103.679, 133 103.288 C 133 102.896, 131.762 101.588, 130.250 100.382 L 127.500 98.190 127.500 81.802 C 127.500 67.797, 127.758 65.020, 129.273 62.707 C 130.682 60.555, 131.821 60, 134.823 60 C 136.900 60, 139.140 60.540, 139.800 61.200 C 140.644 62.044, 141 67.699, 141 80.248 C 141 98.001, 140.987 98.108, 138.500 100.412 C 137.125 101.687, 136 103.015, 136 103.365 C 136 103.714, 141.175 104, 147.500 104 C 153.825 104, 159 103.753, 159 103.452 C 159 103.151, 157.762 101.839, 156.250 100.538 L 153.500 98.171 153.500 81.791 C 153.500 62.264, 154.284 60, 161.048 60 C 164.423 60, 165.202 60.401, 166.025 62.565 C 166.561 63.976, 167 73.876, 167 84.565 L 167 104 175.500 104 C 180.175 104, 184 103.628, 184 103.174 C 184 102.720, 182.908 101.323, 181.574 100.069 C 179.189 97.829, 179.142 97.457, 178.824 78.064 L 178.500 58.339 175.761 54.751 C 170.924 48.413, 163.909 47.662, 155.376 52.566 C 151.287 54.916, 151.237 54.920, 149.476 52.974 C 147.858 51.186, 141.948 48.889, 139.500 49.096 C 138.950 49.142, 136.979 49.618, 135.120 50.153 M 249.326 49.986 C 240.845 51.781, 236 55.840, 236 61.151 C 236 67.825, 243.783 69.055, 247.701 63 C 251.143 57.680, 251.893 57, 254.317 57 C 258.591 57, 261 59.699, 261 64.489 C 261 69.485, 259.402 71.049, 249.956 75.297 C 233.535 82.682, 229.678 92.242, 239.602 100.955 C 245.119 105.799, 253.068 106.224, 259.012 101.992 L 261.855 99.967 262.495 101.984 C 263.054 103.747, 263.994 104, 269.986 104 C 279.840 104, 280.885 103.384, 276.808 99.983 L 273.500 97.224 272.977 76.862 C 272.689 65.663, 272.072 55.696, 271.606 54.713 C 269.620 50.528, 258.206 48.107, 249.326 49.986 M 277.750 50.689 C 275.885 51.177, 275.349 54.480, 276.973 55.483 C 278.322 56.317, 287.503 84.984, 289.470 94.506 C 290.952 101.684, 290.953 102.740, 289.482 107.412 C 287.506 113.686, 281.785 121.751, 278.397 123.039 C 277.007 123.568, 272.839 124, 269.135 124 C 261.897 124, 260 124.979, 260 128.715 C 260 132.044, 265.298 134.992, 271.290 134.996 C 277.376 135.001, 282.709 132.303, 287.521 126.784 C 292.324 121.277, 301.516 102.336, 308.041 84.500 C 313.710 69.007, 320.128 54.657, 321.870 53.580 C 324.746 51.803, 322.286 51, 313.965 51 C 305.037 51, 304.943 51.025, 306.077 53.144 C 306.708 54.323, 307.002 56.948, 306.730 58.977 C 305.888 65.254, 299.775 86.182, 299.035 85.317 C 298.651 84.868, 296.887 79.100, 295.116 72.500 C 293.345 65.900, 290.819 58.138, 289.503 55.250 C 287.205 50.208, 286.960 50.005, 283.305 50.116 C 281.212 50.180, 278.712 50.438, 277.750 50.689 M 204.091 62.403 C 201.237 65.441, 200.033 70.599, 200.101 79.500 C 200.206 93.417, 204.048 98.776, 211.803 95.824 C 216.876 93.893, 219.209 89.418, 219.780 80.525 C 220.319 72.135, 218.930 66.755, 215.192 62.750 C 211.874 59.194, 207.242 59.050, 204.091 62.403 M 84.078 81.318 C 81.646 82.562, 78.765 84.773, 77.676 86.232 C 75.801 88.744, 75.784 89.022, 77.371 91.443 C 79.498 94.689, 84.809 94.973, 87.514 91.985 C 89.423 89.875, 90.987 78.976, 89.374 79.028 C 88.893 79.044, 86.510 80.074, 84.078 81.318 M 257.030 80.113 C 253.166 81.655, 248.201 85.791, 247.477 88.071 C 245.882 93.099, 254.682 96.219, 258.514 91.985 C 260.419 89.879, 261.993 78.946, 260.374 79.063 C 259.893 79.098, 258.388 79.570, 257.030 80.113 M 69.563 119.898 C 68.534 121.564, 65.077 133.410, 65.498 133.831 C 65.727 134.060, 67.535 133.292, 69.514 132.124 C 72.315 130.471, 74.766 130, 80.557 130 L 88 130 88 157.789 C 88 183.603, 87.858 185.856, 86 189.500 C 84.900 191.658, 84 193.553, 84 193.711 C 84 193.870, 88.950 194, 95 194 C 101.916 194, 106 193.616, 106 192.965 C 106 192.395, 105.213 190.729, 104.250 189.261 C 102.687 186.877, 102.500 183.550, 102.500 158.046 L 102.500 129.500 111.844 128.982 C 121.114 128.467, 121.214 128.434, 124.634 124.702 C 126.530 122.633, 127.811 120.504, 127.482 119.970 C 126.714 118.728, 70.330 118.657, 69.563 119.898 M 131.201 123.551 L 125.929 127.101 128.025 130.801 C 132.509 138.714, 132.147 138.587, 138.407 134.431 L 143.992 130.722 141.804 127.111 C 140.601 125.125, 139.144 122.713, 138.567 121.750 C 137.991 120.787, 137.284 120, 136.996 120 C 136.709 120, 134.101 121.598, 131.201 123.551 M 134.756 139.735 C 131.555 139.987, 129.743 140.660, 129.186 141.805 C 128.732 142.737, 128.786 149.651, 129.305 157.169 C 129.825 164.687, 129.923 174.764, 129.523 179.561 C 128.908 186.953, 128.431 188.623, 126.398 190.507 C 125.079 191.729, 124 193.015, 124 193.365 C 124 193.714, 129.175 194, 135.500 194 C 141.825 194, 147 193.714, 147 193.365 C 147 193.015, 145.875 191.687, 144.500 190.412 L 142 188.095 142 163.548 C 142 144.480, 141.721 139.040, 140.750 139.180 C 140.063 139.279, 137.365 139.529, 134.756 139.735 M 166.358 139.897 C 158.110 142.014, 151.973 149.364, 152.022 157.066 C 152.051 161.533, 155.259 168.533, 157.934 169.964 C 159.951 171.044, 159.862 171.224, 155.769 174.346 C 152.027 177.200, 151.500 178.084, 151.500 181.511 C 151.500 184.782, 152.016 185.768, 154.657 187.548 L 157.813 189.675 152.982 194.419 C 146.710 200.577, 144.625 204.984, 145.272 210.718 C 146.657 223.009, 162.960 228.893, 176.590 222.020 C 190.019 215.250, 197 207.821, 197 200.302 C 197 191.346, 193.190 187.886, 178.500 183.501 C 163.732 179.093, 163.645 179.049, 165.583 176.908 C 166.490 175.906, 170.309 173.910, 174.070 172.473 C 181.518 169.627, 185.368 167.043, 187.181 163.672 C 188.971 160.346, 189.871 154.038, 188.993 150.977 C 188.327 148.652, 188.575 148.059, 190.602 147.135 C 192.328 146.349, 193 145.232, 193 143.151 C 193 140.264, 192.989 140.259, 186.750 140.314 C 183.313 140.344, 178.025 140.081, 175 139.729 C 171.975 139.378, 168.086 139.453, 166.358 139.897 M 211.153 140.364 C 206.505 142.046, 201.159 147.410, 198.671 152.887 C 195.571 159.708, 195.636 173.626, 198.799 180.488 C 203.014 189.633, 209.458 194.145, 218.373 194.195 C 229.280 194.256, 238 187.712, 238 179.465 C 238 174.319, 237.289 173.993, 233.924 177.595 C 227.344 184.638, 217.636 184.841, 212.282 178.046 C 211.612 177.196, 211.049 176.003, 211.032 175.396 C 211.014 174.788, 216.648 171.249, 223.552 167.531 C 230.456 163.813, 236.806 159.699, 237.664 158.390 C 240.898 153.455, 236.638 144.100, 229.729 140.964 C 224.903 138.773, 216.314 138.496, 211.153 140.364 M 261.370 140.393 C 259.649 141.168, 257.929 142.307, 257.548 142.923 C 257.090 143.663, 256.253 143.299, 255.081 141.852 C 253.374 139.744, 253.075 139.711, 247.115 140.976 L 240.923 142.290 243.212 144.723 C 245.414 147.065, 245.512 147.906, 245.808 167.097 L 246.117 187.037 243.058 190.095 C 241.376 191.778, 240 193.344, 240 193.577 C 240 193.810, 245.175 194, 251.500 194 C 257.825 194, 263 193.628, 263 193.174 C 263 192.720, 261.875 191.292, 260.500 190 C 258.026 187.676, 258 187.475, 258 170.907 C 258 161.698, 258.273 153.452, 258.607 152.582 C 259.065 151.387, 260.656 151, 265.107 151 C 271.160 151, 275 148.908, 275 145.611 C 275 140.821, 267.118 137.804, 261.370 140.393 M 166.395 149.520 C 164.333 152.667, 164.969 160.204, 167.537 163.041 C 172.118 168.103, 177.727 163.324, 176.627 155.297 C 175.538 147.347, 169.903 144.166, 166.395 149.520 M 214.241 149.250 C 213.082 150.488, 211.653 152.767, 211.067 154.315 C 209.805 157.646, 209.656 163.669, 210.818 164.388 C 211.826 165.011, 221.843 160.452, 224.247 158.277 C 225.211 157.404, 226 155.410, 226 153.845 C 226 147.717, 218.443 144.764, 214.241 149.250 M 162.161 196.757 C 156.233 202.322, 155.380 206.133, 159.250 209.759 C 166.909 216.934, 180.410 214.774, 183.814 205.828 C 186.369 199.115, 182.370 195.161, 170.411 192.579 C 167.682 191.990, 166.719 192.477, 162.161 
        196.757" 
        stroke="none" 
        fill="#fffcfc" fillRule="evenodd">

 </path>
 <path d="" stroke="none" fill="#fcfcfc" fillRule="evenodd">
</path>

           </svg>


    </div>
    </Link>
  </div>
  <div className="col-span-7" >
    <GeoLocation/>
  </div>
  <div className="flex justify-between gap-2 col-span-12 ">
    <input type="text" placeholder="Search for seafood , chicken and more" 
    value={searchText}
    onChange={(e)=>setSearchText(e.target.value)}
    className="input input-bordered w-24 md:w-80 focus:outline-none rounded-full" />

    <div className="flex items-center gap-15">
    <div className="dropdown dropdown-end ">
      <div tabIndex={0} role="button"  >
        <div className="text-white flex items-center gap-1 cursor-pointer">
       {user ?
       <span className="text-medium">
       {user?.firstName?.toUpperCase() }
       {" "}
       {user?.lastName?.toUpperCase() }
       </span> :
       <span>LOGIN </span>}
              <svg 
              width="16" 
              height="10" 
              viewBox="0 0 16 10" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg">
              <path 
              d="M6.99999 5.17192L11.95 0.221924L13.364 1.63592L6.99999 7.99992L0.635986 1.63592L2.04999 0.221924L6.99999 5.17192Z" 
              fill="#fff">
              </path>
              </svg>
        </div>
      </div>
      <ul
        tabIndex={0}
        className="menu-sm dropdown-content bg-base-100 rounded-box z-1 -right-30 top-13 w-70  shadow">
         <li className=" py-2 px-4">
         {user ? 
        <div className="flex flex-col gap-3 items-start" >
          <div className="font-semibold text-lg"> Welcome {user?.firstName}{" "}{user?.lastName}</div>
          {!user &&
          <div className="text-[10px] text-[#707479]"> 
           Register to enjoy the best features, offers and more
           </div>
           }
         </div>:
          <div className="flex flex-col gap-3 items-start" >
          <div className="font-semibold text-xl"> Hello Guest</div>
          <div className="text-[10px] text-[#707479]"> 
           Register to enjoy the best features, offers and more
           </div>
           
           <div 
           className="bg-orange-600 px-8 py-1 rounded text-white" 
           onClick={handleLoginModal}>Login
           </div>
           
          </div>
         }
        </li>
        {user&&
        <li className="border-b-1 border-[#ebebeb] py-2  px-4"
        onClick={handleRemoveFocus} >
          <a className="justify-between cursor-pointer" >
            Profile
          </a>
        </li>
        }
        <Link href={"/order-history"}>
              {user&&
        <li className="border-b-1 border-[#ebebeb] py-2  px-4"
        onClick={handleRemoveFocus} >
          <div className="justify-between cursor-pointer" >
            My orders
          </div>
        </li>
     
        }
           </Link>
          {user&&
        <li className="border-b-1 border-[#ebebeb] py-2  px-4 cursor-pointer">
        <a  onClick={handleRemoveFocus}>Settings</a>
        </li>}
         {user&& <li className=" py-2  px-4 cursor-pointer"><a  onClick={logoutHandler}>
         Logout
         </a>
         </li>
          }
      </ul>
    </div>
    
    <div className="flex gap-5 relative items-center cursor-pointer" onClick={handleCartModal}> 
       <div className="text-black text-center absolute bottom-5 left-3 bg-white  rounded-full w-6 h-6">{cart?.length  || 0}</div>
       <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
       <path d="M2 14V2H0V0H3C3.26522 0 3.51957 0.105357 3.70711 0.292893C3.89464 0.48043 4 0.734784 4 1V13H16.438L18.438 5H6V3H19.72C19.872 3 20.022 3.03466 20.1586 3.10134C20.2952 3.16801 20.4148 3.26495 20.5083 3.38479C20.6019 3.50462 20.6668 3.6442 20.6983 3.79291C20.7298 3.94162 20.7269 4.09555 20.69 4.243L18.19 14.243C18.1358 14.4592 18.011 14.6512 17.8352 14.7883C17.6595 14.9255 17.4429 15 17.22 15H3C2.73478 15 2.48043 14.8946 2.29289 14.7071C2.10536 14.5196 2 14.2652 2 14ZM4 21C3.46957 21 2.96086 20.7893 2.58579 20.4142C2.21071 20.0391 2 19.5304 2 19C2 18.4696 2.21071 17.9609 2.58579 17.5858C2.96086 17.2107 3.46957 17 4 17C4.53043 17 5.03914 17.2107 5.41421 17.5858C5.78929 17.9609 6 18.4696 6 19C6 19.5304 5.78929 20.0391 5.41421 20.4142C5.03914 20.7893 4.53043 21 4 21ZM16 21C15.4696 21 14.9609 20.7893 14.5858 20.4142C14.2107 20.0391 14 19.5304 14 19C14 18.4696 14.2107 17.9609 14.5858 17.5858C14.9609 17.2107 15.4696 17 16 17C16.5304 17 17.0391 17.2107 17.4142 17.5858C17.7893 17.9609 18 18.4696 18 19C18 19.5304 17.7893 20.0391 17.4142 20.4142C17.0391 20.7893 16.5304 21 16 21Z" fill="#EBEBEB">

       </path>
       </svg>
       <div className="text-white">Cart</div>
    </div>
   </div>
  </div>
</div>
   <LoginModal/>
  <CartModal/>
</div>
  )
}

export default Navbar